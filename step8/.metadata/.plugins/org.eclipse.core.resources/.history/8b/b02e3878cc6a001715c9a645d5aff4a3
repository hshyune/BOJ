import java.io.*;
import java.util.*;

class Element implements Comparable<Element> {
	String data;
	int len;

	public Element(String str) {
		setData(str);
	}

	public void setData(String str) {
		this.data = str;
		this.len = data.length();
	}

	public int getLen() {
		return this.len;
	}

	public String getData() {
		return this.data;
	}

	public boolean amIPrior(Element ecmp) {
		int cmp = 0;
		for (int i = 0; i < len; i++) {
			cmp = this.data.charAt(i) - ecmp.getData().charAt(i);
			if (cmp < 0) {
				return true;
			}
		}
		return false;
	}

	@Override
	public int compareTo(Element other) {
		// TODO Auto-generated method stub
		if(Comparators.LEN.compare(this, other) ==	0){
			return 
		}else{
			
		}
		return 0;
	}

	public static class Comparators {

		public static Comparator<Element> DATA = new Comparator<Element>() {
			@Override
			public int compare(Element o1, Element o2) {
				int size = o1.getLen();
				for (int i = 0; i < size; i++) {
					if (o1.getData().charAt(i) - o2.getData().charAt(i) < 0) {
						return -1;
					}
				}
				return 0;
			}
		};
		public static Comparator<Element> LEN = new Comparator<Element>() {
			@Override
			public int compare(Element o1, Element o2) {
				return o1.getLen() - o2.getLen();
			}
		};
	}
}

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		try {
			BufferedReader br = new BufferedReader(new InputStreamReader(System.in), 1);
			int n = Integer.parseInt(br.readLine());

			ArrayList<Element> data = new ArrayList<Element>();
			for (int i = 0; i < n; i++)
				data.add(new Element(br.readLine()));

			Collections.sort(data, c);
			System.out.println(data);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

}
